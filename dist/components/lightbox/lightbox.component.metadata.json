[{"__symbolic":"module","version":4,"metadata":{"LightboxComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":21,"character":1},"arguments":[{"selector":"lightbox","template":"\n      <div class=\"lightbox-background\"\n          [@backgroundVisibility]=\"backgroundVisibilityAnimator.animation\"\n          (@backgroundVisibility.start)=\"backgroundVisibilityAnimator.animationStart($event)\"\n          (@backgroundVisibility.done)=\"backgroundVisibilityAnimator.animationDone($event)\">\n      </div>\n\n      <lightbox-toolbar #toolbar\n          [ngStyle]=\"{'order': config.controls.toolbar.position === 'top' ? 1 : 2 }\"\n          [pagination]=\"pagination\"\n          [title]=\"activeItem?.title\"\n          (closeEvent)=\"onClose($event)\"\n          (firstEvent)=\"onFirst()\"\n          (previousEvent)=\"onPrevious()\"\n          (nextEvent)=\"onNext()\"\n          (lastEvent)=\"onLast()\"\n          (thumbnailsToggleEvent)=\"thumbnailsToggle()\">\n      </lightbox-toolbar>\n\n      <div class=\"lightbox-container\"\n          [ngStyle]=\"{'order': config.controls.toolbar.position === 'bottom' ? 1 : 2 }\"\n          [ngClass]=\"{'vertical-container': config.controls.thumbnails.position === 'left' || config.controls.thumbnails.position === 'right', 'horizontal-container': config.controls.thumbnails.position === 'top' || config.controls.thumbnails.position === 'bottom'}\">\n    \n          <div class=\"lightbox-items-container\"\n              [ngStyle]=\"{'order': config.controls.thumbnails.position === 'bottom' || config.controls.thumbnails.position === 'right' ? 1 : 2 }\">\n        \n              <div #background \n                  [ngStyle]=\"{'visibility': state === 'closed' || state === 'closing' ? 'hidden' : 'visible' }\" \n                  (tap)=\"onClose($event)\" \n                  (swipeleft)=\"swipe($event.type)\" \n                  (swiperight)=\"swipe($event.type)\" \n                  class=\"lightbox-items-background\">\n\n                  <div *ngIf=\"activeItem\" class=\"item-list\" #itemList\n                      [@lightboxSlice]=\"lightboxSliceAnimator.animation\"\n                      (@lightboxSlice.start)=\"lightboxSliceAnimator.animationStart($event)\"\n                      (@lightboxSlice.done)=\"lightboxSliceAnimator.animationDone($event)\">\n                      <lightbox-item (toggleEvent)=\"onToggle()\" #lightboxItem *ngFor=\"let item of items[activeItem.container]\" [item]=\"item\">\n                      </lightbox-item>\n                  </div>\n              </div>\n\n              <lightbox-zoom #lightboxZoom\n                  [style.visibility]=\"displayZoom\"\n                  [disableZoomIn]=\"disableZoomIn\"\n                  [disableZoomOut]=\"disableZoomOut\"\n                  [disableResetZoom]=\"disableResetZoom\"\n                  [disableFeetToWidth]=\"disableFeetToWidth\"\n                  (zoomInEvent)=\"zoomIn()\"\n                  (zoomOutEvent)=\"zoomOut()\"\n                  (resetZoomEvent)=\"resetZoom()\"\n                  (feetToWidthEvent)=\"feetToWidth()\">\n              </lightbox-zoom>\n\n              <youtube\n                  [ngStyle]=\"{'visibility': displayYoutube ? 'visible' : 'hidden' }\" \n                  [videoId]=\"activeItem? getYoutubeVideoId() : undefined\"\n                   (ready)=\"onReady($event)\"\n                  (change)=\"onChange($event)\"\n                  (error)=\"onError($event)\">\n              </youtube>\n\n          </div>\n          <lightbox-thumbnails [ngClass]=\"{'vertical-thumbnails': config.controls.thumbnails.position === 'left' || config.controls.thumbnails.position === 'right', 'horizontal-thumbnails': config.controls.thumbnails.position === 'top' || config.controls.thumbnails.position === 'bottom'}\" #thumbnails [items]=\"activeItem? items[activeItem.container]:[]\" (selectEvent)=\"selectItem($event)\"\n          [ngStyle]=\"{'order': config.controls.thumbnails.position === 'top' || config.controls.thumbnails.position === 'left' ? 1 : 2 }\">\n          </lightbox-thumbnails>\n      </div>\n    ","styles":["\n      lightbox{pointer-events:none;top:0;left:0;height:100%;width:100%;display:flex;flex-direction:column}lightbox .lightbox-background,lightbox .lightbox-items-background{height:100%;width:100%;position:absolute;top:0;z-index:1}lightbox .lightbox-background .item-list,lightbox .lightbox-items-background .item-list{position:relative;height:100%;display:flex}lightbox .lightbox-container{display:flex;flex:1 1 0%;position:relative;overflow:hidden}lightbox .lightbox-items-container{flex:1 1 0%;box-sizing:border-box;height:100%;position:relative}.lightbox-overlay-container{pointer-events:none;position:fixed;z-index:10000;height:100%;width:100%;top:0px;left:0px}lightbox .lightbox-container.vertical-container{flex-direction:row}lightbox .lightbox-container.horizontal-container{flex-direction:column}\n    "],"animations":[{"__symbolic":"select","expression":{"__symbolic":"reference","module":"../../models/lightbox/animations/lightbox-animations","name":"LightboxAnimations","line":94,"character":17},"member":"visibilityAnimation"},{"__symbolic":"select","expression":{"__symbolic":"reference","module":"../../models/lightbox/animations/lightbox-animations","name":"LightboxAnimations","line":94,"character":57},"member":"sliceAnimation"}],"host":{"[style.pointer-events]":"_pointerEvents","$quoted$":["[style.pointer-events]"]},"encapsulation":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewEncapsulation","line":98,"character":19},"member":"None"}}]}],"members":{"background":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":106,"character":5},"arguments":["background"]}]}],"toolbar":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":108,"character":5},"arguments":["toolbar"]}]}],"thumbnails":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":110,"character":5},"arguments":["thumbnails"]}]}],"lightboxZoom":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":112,"character":5},"arguments":["lightboxZoom"]}]}],"_itemList":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":138,"character":5},"arguments":["itemList"]}]}],"_itemsRef":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChildren","line":140,"character":5},"arguments":["lightboxItem"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"../../services/lightbox-configuration.service","name":"LightboxConfigurationService","line":161,"character":56}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"openItem":[{"__symbolic":"method"}],"getYoutubeVideoId":[{"__symbolic":"method"}],"addItem":[{"__symbolic":"method"}],"thumbnailsToggle":[{"__symbolic":"method"}],"removeItem":[{"__symbolic":"method"}],"onToggle":[{"__symbolic":"method"}],"onClose":[{"__symbolic":"method"}],"selectItem":[{"__symbolic":"method"}],"onNext":[{"__symbolic":"method"}],"onLast":[{"__symbolic":"method"}],"onFirst":[{"__symbolic":"method"}],"onPrevious":[{"__symbolic":"method"}],"zoomIn":[{"__symbolic":"method"}],"zoomOut":[{"__symbolic":"method"}],"resetZoom":[{"__symbolic":"method"}],"feetToWidth":[{"__symbolic":"method"}],"swipe":[{"__symbolic":"method"}],"onReady":[{"__symbolic":"method"}],"onError":[{"__symbolic":"method"}],"onChange":[{"__symbolic":"method"}],"_initItems":[{"__symbolic":"method"}],"_openControls":[{"__symbolic":"method"}],"_closeControls":[{"__symbolic":"method"}],"_getContainerDimensionsAfterOpen":[{"__symbolic":"method"}],"_updatePagination":[{"__symbolic":"method"}],"_checkYoutube":[{"__symbolic":"method"}],"_itemRef":[{"__symbolic":"method"}],"_itemIndex":[{"__symbolic":"method"}],"_onResize":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener","line":495,"character":5},"arguments":["window:resize",["$event"]]}]}],"_checkZoom":[{"__symbolic":"method"}]}}}}]